<?xml version="1.0" encoding="utf-8"?>
<app:ConsilioApplication xmlns:app="de.bht.consilio.application.*"
						 xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 xmlns:ConsilioCustomComponents="de.bht.ConsilioCustomComponents.*"
						 xmlns:view="de.bht.consilio.view.*"
						 width="1280" height="720" showStatusBar="false" currentState="login" 
						 windowComplete="creationComplete(event)" xmlns:ns="de.bht.consilio.custom_components.*" xmlns:ns1="de.bht.consilio.custom_components.view.*">
	<app:layout>
		<s:BasicLayout/>
	</app:layout>
	
	<app:states>
		<s:State name="game"/>
		<s:State name="login"/>
		<s:State enterState="onEnterRegisterState()" name="register"/>
		<s:State enterState="onEnterSetupState()" name="setup"/>
	</app:states>
	
	<!-- Consumer and Producer declarations for chat functionality-->
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import de.bht.consilio.controller.RemoteServiceController;
			import de.bht.consilio.controller.RemotingEvent;
			import de.bht.consilio.event.ConsilioEvent;
			
			import flash.events.Event;
			import flash.html.HTMLLoader;
			import flash.net.URLRequest;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.HTML;
			import mx.events.AIREvent;
			
			import spark.components.BusyIndicator;
			
			private var _userId:String;
			
			// Handle message sent
			private function send():void {
				if(msg.text!="") {
					RemoteServiceController.getInstance().send(msg.text);
					msg.text="";
				}
			}
			
			private function handleChatMessage(e:RemotingEvent):void {
				log.text = log.text + e.message;
				
				log.verticalScrollPosition = int.MAX_VALUE;
			}
			
			
			protected function loginHandler(event:ConsilioEvent):void
			{
				var username:String = loginPanel.username.text;
				var pw:String = loginPanel.password.text;
				
				RemoteServiceController.getInstance().login(username, pw);
				
				RemoteServiceController.getInstance().addEventListener(RemotingEvent.LOGIN_COMPLETE, handleLoginComplete);
				RemoteServiceController.getInstance().addEventListener(RemotingEvent.LOGIN_FAILED, handleLoginFailed);
				
			}
			
			protected function registrationHandler(event:ConsilioEvent):void
			{
				var username:String = registerPanel.registerName.text;
				var email:String = registerPanel.registerEmail.text;
				var pw:String = registerPanel.registerPassword.text;
				
				RemoteServiceController.getInstance().register(username, pw, email);
				
				RemoteServiceController.getInstance().addEventListener(RemotingEvent.REGISTRATION_COMPLETE, handleRegistrationComplete);
				RemoteServiceController.getInstance().addEventListener(RemotingEvent.REGISTRATION_FAILED, handleRegistrationFailed);
				
			}
			
			protected function creationComplete(e:Event):void {
				trace("Window Complete");
				// TODO: DEBUG
//				gameCompleteHandler(new RemotingEvent(RemotingEvent.GAME_COMPLETE, null, true));
				loginPanel.addEventListener(ConsilioEvent.LOGIN, loginHandler);
			}
			
			protected function onEnterRegisterState():void {
				registerPanel.addEventListener(ConsilioEvent.REGISTER, registrationHandler);
			}
			
			protected function onEnterSetupState():void {
				RemoteServiceController.getInstance().getAllPublicGames();
				RemoteServiceController.getInstance().addEventListener(RemotingEvent.GAME_LIST_RECEIVED, gameList.refreshList);
				RemoteServiceController.getInstance().addEventListener(RemotingEvent.GAME_LIST_FAILED, gameListFailed);
				RemoteServiceController.getInstance().addEventListener(RemotingEvent.GAME_COMPLETE, gameCompleteHandler);
			}
			
			private function gameListFailed(e:RemotingEvent):void
			{
				trace(e.message);
			}
			
			protected function handleLoginComplete(e:RemotingEvent):void {
				trace("Login Complete");
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.LOGIN_COMPLETE, handleLoginComplete);
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.LOGIN_FAILED, handleLoginFailed);
				
				setUserId(e.message);
				
				loginPanel.removeEventListener(ConsilioEvent.LOGIN, loginHandler);
				
				currentState="setup";
			}
			
			protected function handleLoginFailed(e:RemotingEvent):void {
				Alert.show(e.message);
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.LOGIN_COMPLETE, handleLoginComplete);
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.LOGIN_FAILED, handleLoginFailed);
			}
			
			protected function handleRegistrationComplete(e:RemotingEvent):void {
				trace("Registration Complete");
				Alert.show("Registration Complete. Please Login to play");
				currentState="login";
				loginPanel.username.text = e.message;
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.REGISTRATION_COMPLETE, handleRegistrationComplete);
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.REGISTRATION_FAILED, handleRegistrationFailed);
			}
			
			protected function handleRegistrationFailed(e:RemotingEvent):void {
				Alert.show(e.message);
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.REGISTRATION_COMPLETE, handleRegistrationComplete);
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.REGISTRATION_FAILED, handleRegistrationFailed);
			}
			
			protected function gameCompleteHandler(e:RemotingEvent):void {
				RemoteServiceController.getInstance().removeEventListener(RemotingEvent.GAME_COMPLETE, gameCompleteHandler);
				RemoteServiceController.getInstance().addEventListener(RemotingEvent.CHAT_MESSAGE_RECEIVED, handleChatMessage);
				currentState="game";
				initMainView(e.data);
			}
			
		]]>
	</fx:Script>
	<s:Image width="100%" height="100%" source="@Embed(source='img/battle.jpg')"/>
	<view:LoginPanel id="loginPanel" includeIn="login" horizontalCenter="0" verticalCenter="0"/>
	
	<view:RegisterPanel id="registerPanel" includeIn="register" horizontalCenter="0"
						verticalCenter="0"/>
	
	<view:GamesList id="gameList" includeIn="setup" horizontalCenter="0" verticalCenter="0"/>
	
	<!-- container for the game -->
	<s:BorderContainer id="mainContainer" includeIn="game" x="0" y="0" width="100%" height="100%"
					   backgroundColor="#676464" borderWeight="0" cornerRadius="0">
	</s:BorderContainer>
	
	<!-- the chat component -->
	<mx:Panel includeIn="game" right="10" bottom="10" width="500" height="165" layout="absolute"
			  title="Chat">
		<mx:TextArea id="log" x="0" bottom="41" width="100%" height="95" borderVisible="false"
					 editable="false" enabled="true" selectable="false" wordWrap="true"/>
		<mx:Canvas left="0" bottom="0" width="100%" height="20%" borderAlpha="0">
			<mx:TextInput id="msg" y="0" left="20" width="75%" enter="send()"/>
			<mx:Button right="20" label="Send" click="send()"/>
		</mx:Canvas>
	</mx:Panel>
	
	<!-- bottom menu bar -->
	<ns1:BottomMenu id="bottomMenu" includeIn="game" left="10" bottom="10"/>
	
	<ns1:ActionMenu id="actionMenu" includeIn="game" visible="false"/>
	
	<ns1:GameStatusBar id="gameStatusBar" includeIn="game" visible="true" right="10" top="10"/>
	
	<s:BusyIndicator id="busyIndicator" includeIn="game" width="300" height="300" minWidth="100"
					 minHeight="100" enabled="false" visible="false" horizontalCenter="0" verticalCenter="0"/>
	<s:Label id="busyLabel" enabled="false" visible="false" alpha="0.5 " fontSize="36" horizontalCenter="0" text="some Text" verticalCenter="-190"/>
</app:ConsilioApplication>
